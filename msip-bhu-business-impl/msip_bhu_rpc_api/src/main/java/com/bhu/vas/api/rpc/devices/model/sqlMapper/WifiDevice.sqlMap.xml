<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bhu.vas.api.rpc.devices.model.WifiDevice">

  <resultMap id="modelResult" type="wifiDevice">
    <id property="id" column="id"/>
    <result property="hdtype" column="hdtype"/>
    <result property="orig_vendor" column="orig_vendor"/>
    <result property="orig_model" column="orig_model"/>
    <result property="orig_hdver" column="orig_hdver"/>
    <result property="orig_swver" column="orig_swver"/>
    
    <result property="oem_vendor" column="oem_vendor"/>
    <result property="oem_model" column="oem_model"/>
    <result property="oem_hdver" column="oem_hdver"/>
    <result property="oem_swver" column="oem_swver"/>
    <result property="sn" column="sn"/>
    <result property="ip" column="ip"/>
    <result property="wan_ip" column="wan_ip"/>
    <result property="config_sequence" column="config_sequence"/>
    <result property="build_info" column="build_info"/>
    <result property="config_model_ver" column="config_model_ver"/>
    <result property="config_mode" column="config_mode"/>
    <result property="work_mode" column="work_mode"/>
    <result property="online" column="online"/>
    
    <result property="agentuser" column="agentuser"/>
    
    <result property="rx_bytes" column="rx_bytes"/>
    <result property="tx_bytes" column="tx_bytes"/>
    <result property="data_rx_rate" column="data_rx_rate"/>
    <result property="data_tx_rate" column="data_tx_rate"/>
    <result property="lat" column="lat"/>
    <result property="lon" column="lon"/>
    <result property="country" column="country"/>
    <result property="province" column="province"/>
    <result property="city" column="city"/>
    <result property="district" column="district"/>
    <result property="street" column="street"/>
    <result property="formatted_address" column="formatted_address"/>
    <result property="carrier" column="carrier"/>
    <result property="bdid" column="bdid"/>
    <result property="loc_method" column="loc_method"/>
    <result property="uptime" column="uptime"/>
    <result property="tfcard_usage" column="tfcard_usage"/>
    <result property="industry" column="industry"/>
    <result property="merchant_name" column="merchant_name"/>
	<result property="last_start_at" column="last_start_at"/>
    <result property="last_reged_at" column="last_reged_at"/>
    <result property="last_logout_at" column="last_logout_at"/>
    <result property="first_reged_at" column="first_reged_at"/>
    
    <result property="channel_lv1" column="channel_lv1"/>
    <result property="channel_lv2" column="channel_lv2"/>
    
    <result property="created_at" column="created_at"/>
    <result property="updated_at" column="updated_at"/>
  </resultMap>  
  
  	<sql id="modelTableName">
	    <![CDATA[
	    	t_wifi_devices
	    ]]>
	</sql>
	<sql id="modelColumns">
	    <![CDATA[
	    	id,
	    	hdtype,
	    	orig_vendor,
	    	orig_model,
	    	orig_hdver,
	    	orig_swver,
	    	oem_vendor,
	    	oem_model,
	    	oem_hdver,
	    	oem_swver,
	    	sn,
	    	ip,
	    	wan_ip,
	    	config_sequence,
	    	build_info,
	    	config_model_ver,
	    	config_mode,
	    	work_mode,
	    	online,
	    	agentuser,
	    	rx_bytes,
	    	tx_bytes,
	    	data_rx_rate,
	    	data_tx_rate,
	    	lat,
	    	lon,
	    	country,
	    	province,
	    	city,
	    	district,
	    	street,
	    	formatted_address,
	    	carrier,
	    	bdid,
	    	loc_method,
	    	uptime,
	    	tfcard_usage,
	    	industry,
	    	merchant_name,
	    	last_start_at,
	    	last_reged_at,
	    	last_logout_at,
	    	first_reged_at,
	    	channel_lv1,
	    	channel_lv2,
	    	created_at,
	    	updated_at
	    ]]>
	</sql>  
	<sql id="modelWithoutPKColumns">
	    <![CDATA[
	    	hdtype,
	    	orig_vendor,
	    	orig_model,
	    	orig_hdver,
	    	orig_swver,
	    	oem_vendor,
	    	oem_model,
	    	oem_hdver,
	    	oem_swver,
	    	sn,
	    	ip,
	    	wan_ip,
	    	config_sequence,
	    	build_info,
	    	config_model_ver,
	    	config_mode,
	    	work_mode,
	    	online,
	    	agentuser,
	    	rx_bytes,
	    	tx_bytes,
	    	data_rx_rate,
	    	data_tx_rate,
	    	lat,
	    	lon,
	    	country,
	    	province,
	    	city,
	    	district,
	    	street,
	    	formatted_address,
	    	carrier,
	    	bdid,
	    	loc_method,
	    	uptime,
	    	tfcard_usage,
	    	industry,
	    	merchant_name,
	    	last_start_at,
	    	last_reged_at,
	    	last_logout_at,
	    	first_reged_at,
	    	channel_lv1,
	    	channel_lv2,
	    	created_at,
	    	updated_at
	    ]]>
	</sql>   
	
	<sql id="modelInsertValues">
			#{id},
	    	#{hdtype},
	    	#{orig_vendor},
	    	#{orig_model},
	    	#{orig_hdver},
	    	#{orig_swver},
	    	#{oem_vendor},
	    	#{oem_model},
	    	#{oem_hdver},
	    	#{oem_swver},
	    	#{sn},
	    	#{ip},
	    	#{wan_ip},
	    	#{config_sequence},
	    	#{build_info},
	    	#{config_model_ver},
	    	#{config_mode},
	    	#{work_mode},
	    	#{online},
	    	#{agentuser},
	    	#{rx_bytes},
	    	#{tx_bytes},
	    	#{data_rx_rate},
	    	#{data_tx_rate},
	    	#{lat},
	    	#{lon},
	    	#{country},
	    	#{province},
	    	#{city},
	    	#{district},
	    	#{street},
	    	#{formatted_address},
	    	#{carrier},
	    	#{bdid},
	    	#{loc_method},
	    	#{uptime},
	    	#{tfcard_usage},
	    	#{industry},
	    	#{merchant_name},
	    	#{last_start_at},
	    	#{last_reged_at},
	    	#{last_logout_at},
	    	#{first_reged_at},
	    	#{channel_lv1},
	    	#{channel_lv2},
	    	#{created_at},
	    	#{updated_at}
	</sql> 
	
	<sql id="modelUpdateValues">
	    	hdtype = #{hdtype},
	    	orig_vendor = #{orig_vendor},
	    	orig_model = #{orig_model},
	    	orig_hdver = #{orig_hdver},
	    	orig_swver = #{orig_swver},
	    	oem_vendor = #{oem_vendor},
	    	oem_model = #{oem_model},
	    	oem_hdver = #{oem_hdver},
	    	oem_swver = #{oem_swver},
	    	sn = #{sn},
	    	ip = #{ip},
	    	wan_ip = #{wan_ip},
	    	config_sequence = #{config_sequence},
	    	build_info = #{build_info},
	    	config_model_ver = #{config_model_ver},
	    	config_mode = #{config_mode},
	    	work_mode = #{work_mode},
	    	online = #{online},
	    	agentuser = #{agentuser},
	    	rx_bytes = #{rx_bytes},
	    	tx_bytes = #{tx_bytes},
	    	data_rx_rate = #{data_rx_rate},
	    	data_tx_rate = #{data_tx_rate},
	    	lat = #{lat},
	    	lon = #{lon},
	    	country = #{country},
	    	province = #{province},
	    	city = #{city},
	    	district = #{district},
	    	street = #{street},
	    	formatted_address = #{formatted_address},
	    	carrier = #{carrier},
	    	bdid = #{bdid},
	    	loc_method = #{loc_method},
	    	uptime = #{uptime},
	    	tfcard_usage = #{tfcard_usage},
	    	industry = #{industry},
	    	merchant_name = #{merchant_name},
	    	last_start_at = #{last_start_at},
	    	last_reged_at = #{last_reged_at},
	    	last_logout_at = #{last_logout_at},
	    	channel_lv1=#{channel_lv1},
	    	channel_lv2=#{channel_lv2},
	    	first_reged_at = #{first_reged_at},
	    	updated_at = #{updated_at}
	</sql>
	<sql id="model_CRITERIA_SQL_GenCondition">
		<!--
			WARNING - @mbggenerated This element is automatically generated by
			MyBatis Generator, do not modify. This element was generated on Thu
			Sep 01 10:08:21 CST 2011.
		-->
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
                				</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
                				</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                				</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem" open="(" close=")" separator=",">
										#{listItem}
                  					</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	
	<select id="select" resultMap="modelResult">
	    select <include refid="modelColumns" /> from <include refid="modelTableName" /> 
	    <where>
	    	<if test="_parameter != null">
				id = #{id}
				<!-- 
					#{value}
					#{_parameter}
				 -->
			</if>
		</where>
	</select>
	
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from <include refid="modelTableName" /> where id=#{id}
	</delete>
	
	<delete id="delete" parameterType="wifiDevice">
		delete from <include refid="modelTableName" />
		<where>
			<if test="id != null">
				id = #{id}
			</if>
		</where>
	</delete>
	
	<insert id="insert" parameterType="wifiDevice">
		insert into <include refid="modelTableName" /> (<include refid="modelColumns" />) values (<include refid="modelInsertValues" />);
	</insert>
 
	<update id="update" parameterType="wifiDevice">
	    update <include refid="modelTableName" /> set <include refid="modelUpdateValues" /> WHERE id = #{id}
	</update>
		
	<select id="selectByIds" resultMap="modelResult" parameterType="java.util.List">
	  	select <include refid="modelColumns" /> from <include refid="modelTableName" />
	  	<where>
	  		id IN
	  		<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
			    #{item}
			</foreach>
	  	</where>
	</select>
	
	<select id="selectByField" resultType="java.lang.String" parameterType="map">
	    SELECT  
	    <if test="isDistinct !=0">
	    	distinct
	    </if>
	    ${field} 
	    FROM <include refid="modelTableName" /> 
	    <where>
			<if test="judge!=null and param !=null" >
				and
					${judge} = #{param}
			</if>
	    </where>
	</select>
	  
	<delete id="deleteByIds" parameterType="java.util.List">
	  	delete from <include refid="modelTableName" />
	  	<where>
	  		id IN
	  		<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
			    #{item}
			</foreach>
	  	</where>
	</delete>
	
	<select id="pkSelectByModelCriteria" resultType="java.lang.String">
		select id from <include refid="modelTableName" /> 
		<if test="_parameter != null"> 
	     	<include refid="model_CRITERIA_SQL_GenCondition" />
	      	<if test="orderByClause != null">
				order by ${orderByClause}
	    	</if>
			<if test="start!=0 or limit!=0">
				limit #{limit} OFFSET #{start}
			</if>
	    </if>  
	</select>
	
	<select id="countByModelCriteria" resultType="int">
		select count(*) from <include refid="modelTableName" /> 
		<if test="_parameter != null"> 
	      <include refid="model_CRITERIA_SQL_GenCondition" />
	    </if>  		
	</select>
	
	<delete id="removeByModelCriteria">
		delete from <include refid="modelTableName" />  
		<if test="_parameter != null"> 
	      <include refid="model_CRITERIA_SQL_GenCondition" />
    	</if>  
	</delete>
	
	<select id="executeSql" parameterType="String" resultType="int">  
    	${value} 
	</select> 
</mapper>