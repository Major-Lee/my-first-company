<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bhu.vas.api.rpc.distributor.model.DistributorWalletLog">

	<resultMap id="modelResult" type="distributorWalletLog">
		<id property="id" column="id"/>
	    <result property="uid" column="uid"/>
	    <result property="orderid" column="orderid"/>
	    <result property="transmode" column="transmode"/>
	    <result property="transtype" column="transtype"/>
	    <result property="transmode_desc" column="transmode_desc"/>
	    <result property="transtype_desc" column="transtype_desc"/>    
	    <result property="rmoney" column="rmoney"/>
	    <result property="cash" column="cash"/>
	    <result property="vcurrency" column="vcurrency"/>
	    <result property="mac" column="mac"/>
	    <result property="umac" column="umac"/>
	    <result property="current_gpath" column="current_gpath"/>
	    <result property="memo" column="memo"/>
	    <result property="adjusted" column="adjusted"/>
	    <result property="description" column="description"/>
	    <result property="updated_at" column="updated_at"/>
	</resultMap>
	
	<resultMap id="bhuIncome" type="hashmap">
    <result property="income" column="income" javaType="java.lang.String"/>
    <result property="time" column="time" javaType="java.lang.String"/>
  </resultMap>

	<sql id="modelTableName">
	    <![CDATA[
	    	t_vas_users_wallet_log_distributor
	    ]]>
	</sql>
	<sql id="modelColumns">
	    <![CDATA[
	    	id,
			uid,
	    	orderid,
	    	transmode,
	    	transtype,
	    	transmode_desc,
	    	transtype_desc,
	    	rmoney,
	    	cash,
	    	vcurrency,
	    	mac,
	    	umac,
	    	current_gpath,
	    	memo,
	    	description,
	    	adjusted,
	    	updated_at
	    ]]>
	</sql>
	<sql id="modelWithoutPKColumns">
	    <![CDATA[
			uid,
	    	orderid,
	    	transmode,
	    	transtype,
	    	transmode_desc,
	    	transtype_desc,
	    	rmoney,
	    	cash,
	    	vcurrency,
	    	mac,
	    	umac,
	    	current_gpath,
	    	memo,
	    	description,
	    	adjusted,
	    	updated_at
	    ]]>
	</sql>
	
	<sql id="modelBHUAccountIncomeColumns">
	    <![CDATA[
	    	SUM(amount) income,
	    	time
	    ]]>
	</sql>

	<sql id="modelInsertValues">
			#{id},
			#{uid},
	    	#{orderid},
	    	#{transmode},
	    	#{transtype},
	    	#{transmode_desc},
	    	#{transtype_desc},	    	
	    	#{rmoney},
	    	#{cash},
	    	#{vcurrency},
	    	#{mac},
	    	#{umac},
	    	#{current_gpath},
	    	#{memo},
	    	#{description},
	    	#{adjusted},
	    	#{updated_at}
	</sql>

	<sql id="modelUpdateValues">
		uid = #{uid},
	    	orderid = #{orderid},
	    	transmode = #{transmode},
	    	transtype = #{transtype},
	    	transmode_desc = #{transmode_desc},
	    	transtype_desc = #{transtype_desc},
	    	rmoney = #{rmoney},
	    	cash = #{cash},
	    	vcurrency = #{vcurrency},
	    	mac = #{mac},
	    	umac = #{umac},
	    	current_gpath = #{current_gpath},
	    	memo = #{memo},
	    	description = #{description},
	    	adjusted = #{adjusted},
	    	updated_at = #{updated_at}
	</sql>
	<sql id="model_CRITERIA_SQL_GenCondition">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Thu Sep 01 
			10:08:21 CST 2011. -->
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and #{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>

	<select id="select" resultMap="modelResult">
		select
		<include refid="modelColumns" />
		from
		<include refid="modelTableName" />
		<where>
			<if test="_parameter != null">
				id = #{id}
				<!-- #{value} #{_parameter} -->
			</if>
		</where>
	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from
		<include refid="modelTableName" />
		where id=#{id}
	</delete>

	<delete id="delete" parameterType="distributorWalletLog">
		delete from
		<include refid="modelTableName" />
		<where>
			<if test="id != null">
				id = #{id}
			</if>
		</where>
	</delete>
	<insert id="insert" parameterType="distributorWalletLog">
		insert into
		<include refid="modelTableName" />
		(
		<include refid="modelColumns" />
		) values (
		<include refid="modelInsertValues" />
		);
		<!-- <selectKey keyProperty="id" resultType="java.lang.Integer" order="AFTER"> 
			select last_insert_id(); </selectKey> -->
	</insert>

	<update id="update" parameterType="distributorWalletLog">
		update
		<include refid="modelTableName" />
		set
		<include refid="modelUpdateValues" />
		WHERE id = #{id}
	</update>

	<select id="selectByIds" resultMap="modelResult" parameterType="java.util.List">
		select
		<include refid="modelColumns" />
		from
		<include refid="modelTableName" />
		<where>
			id IN
			<foreach item="item" index="index" collection="list" open="("
				separator="," close=")">
				#{item}
			</foreach>
		</where>
	</select>

	<delete id="deleteByIds" parameterType="java.util.List">
		delete from
		<include refid="modelTableName" />
		<where>
			id IN
			<foreach item="item" index="index" collection="list" open="("
				separator="," close=")">
				#{item}
			</foreach>
		</where>
	</delete>

	<select id="pkSelectByModelCriteria" resultType="long">
		select id from
		<include refid="modelTableName" />
		<if test="_parameter != null">
			<include refid="model_CRITERIA_SQL_GenCondition" />
			<if test="orderByClause != null">
				order by ${orderByClause}
			</if>
			<if test="start!=0 or limit!=0">
				limit #{limit} OFFSET #{start}
			</if>
		</if>
	</select>

	<select id="countByModelCriteria" resultType="int">
		select count(*) from
		<include refid="modelTableName" />
		<if test="_parameter != null">
			<include refid="model_CRITERIA_SQL_GenCondition" />
		</if>
	</select>

	<select id="bhuAccountIncome" resultMap="bhuIncome" parameterType="String">
		SELECT <include refid="modelBHUAccountIncomeColumns" />  FROM( SELECT format(sum(cash), 2) amount,date_format(updated_at, '%y-%m-%d') time FROM	t_vas_users_wallet_log_distributor
		WHERE uid = '110' AND updated_at BETWEEN #{pre_day} AND #{today} GROUP BY updated_at ) as t GROUP BY time
	</select>

	<delete id="removeByModelCriteria">
		delete from
		<include refid="modelTableName" />
		<if test="_parameter != null">
			<include refid="model_CRITERIA_SQL_GenCondition" />
		</if>
	</delete>
</mapper>