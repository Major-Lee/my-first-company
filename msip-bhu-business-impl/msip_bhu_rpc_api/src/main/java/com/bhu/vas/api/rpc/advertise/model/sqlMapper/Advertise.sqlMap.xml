<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bhu.vas.api.rpc.advertise.model.Advertise">

  <resultMap id="modelResult" type="advertise">
    <id property="id" column="id"/>
    <result property="uid" column="uid"/>
    <result property="title" column="title"/>
    <result property="type" column="type"/>
    <result property="orderId" column="orderId"/>
    <result property="description" column="description"/>
    <result property="image" column="image"/>
    <result property="url" column="url"/>
    <result property="domain" column="domain"/>
    <result property="province" column="province"/>
    <result property="city" column="city"/>
    <result property="district" column="district"/>
    <result property="cash" column="cash"/>
    <result property="start" column="start"/> 
    <result property="end" column="end"/>
    <result property="duration" column="duration"/>
    <result property="count" column="count"/>
    <result property="ableDevicesNum" column="ableDevicesNum"/>
    <result property="reject_reason" column="reject_reason"/>
    <result property="state" column="state"/>
    
    <result property="verify_uid" column="verify_uid"/>
    <result property="created_at" column="created_at"/>
    <result property="updated_at" column="updated_at"/>
  </resultMap>  
  
  	<sql id="modelTableName">
	    <![CDATA[
	    	t_ops_advertises
	    ]]>
	</sql>
	<sql id="modelColumns">
	    <![CDATA[
	    	id,
	    	uid,
	    	title,
	    	type,
	    	orderId,
	    	description,
	    	image,
	    	url,
	    	domain,
	    	province,
	    	city,
	    	district,
	    	cash,
	    	start,
	    	end,
	    	duration,
	    	count,
	    	ableDevicesNum,
	    	reject_reason,
	    	state,
	    	verify_uid,
	    	created_at,
	    	updated_at
	    ]]>
	</sql>  
	<sql id="modelWithoutPKColumns">
	    <![CDATA[
	    	uid,
	    	title,
	    	type,
	    	orderId,
	    	description,
	    	image,
	    	url,
	    	domain,
	    	province,
	    	city,
	    	district,
	    	cash,
	    	start,
	    	end,
	    	duration,
	    	count,
	    	ableDevicesNum,
	    	reject_reason,
	    	state,
	    	verify_uid,
	    	created_at,
	    	updated_at
	    ]]>
	</sql>   
	
	<sql id="modelInsertValues">
			#{id},
			#{uid},
			#{title},
			#{type},
			#{orderId},
			#{description},
	    	#{image},
	    	#{url},
	    	#{domain},
	    	#{province},
	    	#{city},
	    	#{district},
	    	#{cash},
	    	#{start},
	    	#{end},
	    	#{duration},
	    	#{count},
	    	#{ableDevicesNum},
	    	#{reject_reason},
	    	#{state},
	    	#{verify_uid},
	    	#{created_at},
	    	#{updated_at}
	</sql> 
	
	<sql id="modelUpdateValues">
	    	uid = #{uid},
	    	title = #{title},
	    	type = #{type},
	    	orderId = #{orderId},
	    	description = #{description},
	    	image = #{image},
	    	url = #{url},
	    	domain = #{domain},
	    	province = #{province},
	    	city = #{city},
	    	district = #{district},
	    	cash = #{cash},
	    	start = #{start},
	    	end = #{end},
	    	duration = #{duration},
	    	count = #{count},
	    	ableDevicesNum = #{ableDevicesNum},
	    	reject_reason = #{reject_reason},
	    	state = #{state},
	    	verify_uid = #{verify_uid},
	    	created_at = #{created_at},
	    	updated_at = #{updated_at}
	</sql>
	<sql id="model_CRITERIA_SQL_GenCondition">
		<!--
			WARNING - @mbggenerated This element is automatically generated by
			MyBatis Generator, do not modify. This element was generated on Thu
			Sep 01 10:08:21 CST 2011.
		-->
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
                				</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
                				</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                				</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem" open="(" close=")" separator=",">
										#{listItem}
                  					</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	
	<select id="select" resultMap="modelResult">
	    select <include refid="modelColumns" /> from <include refid="modelTableName" /> 
	    <where>
	    	<if test="_parameter != null">
				id = #{id}
				<!-- 
					#{value}
					#{_parameter}
				 -->
			</if>
		</where>
	</select>
	
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from <include refid="modelTableName" /> where id=#{id}
	</delete>
	
	<delete id="delete" parameterType="advertise">
		delete from <include refid="modelTableName" />
		<where>
			<if test="id != null">
				id = #{id}
			</if>
		</where>
	</delete>
	<insert id="insert" parameterType="advertise"  keyProperty="id">
		insert into <include refid="modelTableName" /> (<include refid="modelColumns" />) values (<include refid="modelInsertValues" />);
		<!-- 
		<selectKey keyProperty="id" resultType="java.lang.Integer" order="AFTER">
			select last_insert_id(); 
		</selectKey>
		 -->
	</insert>
 
	<update id="update" parameterType="advertise">
	    update <include refid="modelTableName" /> set <include refid="modelUpdateValues" /> WHERE id = #{id}
	</update>
		
	<select id="selectByIds" resultMap="modelResult" parameterType="java.util.List">
	  	select <include refid="modelColumns" /> from <include refid="modelTableName" />
	  	<where>
	  		id IN
	  		<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
			    #{item}
			</foreach>
	  	</where>
	</select>
	  
	<delete id="deleteByIds" parameterType="java.util.List">
	  	delete from <include refid="modelTableName" />
	  	<where>
	  		id IN
	  		<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
			    #{item}
			</foreach>
	  	</where>
	</delete>
	
	<select id="pkSelectByModelCriteria" resultType="String">
		select id from <include refid="modelTableName" /> 
		<if test="_parameter != null"> 
	     	<include refid="model_CRITERIA_SQL_GenCondition" />
	      	<if test="orderByClause != null">
				order by ${orderByClause}
	    	</if>
			<if test="start!=0 or limit!=0">
				limit #{limit} OFFSET #{start}
			</if>
	    </if>  
	</select>
	
	<select id="countByModelCriteria" resultType="int">
		select count(*) from <include refid="modelTableName" /> 
		<if test="_parameter != null"> 
	      <include refid="model_CRITERIA_SQL_GenCondition" />
	    </if>  		
	</select>
	
	<select id="countByAdvertiseTime" resultMap="modelResult" parameterType="Map">
		select count(*) from <include refid="modelTableName" /> where <![CDATA[  ((`start` between #{start} and #{end}) and (`end` BETWEEN #{start} and #{end}) or (`start`<#{start} and `end` >#{end}) or ((`start`>#{start} and `start`<#{end}) or (`end`>#{start} and `end`<#{end})))]]> 
			<choose>
				<when test="province=='all'">
					and province='all'
				</when>
				<when test="province!='all' and city=='all'">
					and ((province=#{province} and city='all' ) or (province='all'))
				</when>
				<when test="province!='all' and city!='all' and district=='all'">
					and ((province=#{province} and city=#{city}  and district='all') or (province='all') or (province=#{province} and city='all'))
				</when>
				<when test="province!='all' and city!='all' and district!='all'">
			   		and ((province=#{province} and city=#{city} and district=#{district}) or (province='all') or (province=#{province} and city='all') or (province=#{province} and city=#{city} and district='all'))
				</when>
			</choose>
			  and state not in (5,6);	
	</select>
	<select id="queryByAdvertiseTime" resultType="modelResult" parameterType="Map">
		select * from <include refid="modelTableName" /> where <![CDATA[  ((`start` between #{start} and #{end}) and (`end` BETWEEN #{start} and #{end}) or (`start`<#{start} and `end` >#{end}) or ((`start`>#{start} and `start`<#{end}) or (`end`>#{start} and `end`<#{end})))]]> 	
		and province=#{province} and city=#{city} and district=#{district} 
		<choose>
				<when test="province==null">
					and province='all'
				</when>
				<when test="province!=null and city==null">
					and ((province=#{province} and city='all' ) or (province='all'))
				</when>
				<when test="province!=null and city!=null and district==null">
					and ((province=#{province} and city=#{city}  and district='all') or (province='all') or (province=#{province} and city='all'))
				</when>
				<when test="province!=null and city!=null and district!=null">
			   		and ((province=#{province} and city=#{city} and district=#{district}) or (province='all') or (province=#{province} and city='all') or (province=#{province} and city=#{city} and district='all'))
				</when>
			</choose>
			and state not in (5,6);
	</select>
	
	<delete id="removeByModelCriteria">
		delete from <include refid="modelTableName" />  
		<if test="_parameter != null"> 
	      <include refid="model_CRITERIA_SQL_GenCondition" />
    	</if>  
	</delete>
</mapper>