<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bhu.vas.api.rpc.tag.model.TagGroupHandsetDetail">
  <resultMap id="modelResult" type="tagGroupHandsetDetail">
	  <id property="id" column="id" />
	  <result property="hdmac" column="hdmac"/>
	  <result property="gid" column="gid"/>
	  <result property="timestr" column="timestr"/>
	  <result property="mobileno" column="mobileno"/>
	  <result property="newuser" column="newuser"/>
	  <result property="auth" column="auth"/>
	  <result property="created_at" column="created_at"/>
	  <result property="updated_at" column="updated_at"/>
  </resultMap>  
  
  <resultMap id="HandsetMap" type="hashmap">
  	<result property="hdmac" column="hdmac"/>
  	<result property="mobileno" column="mobileno"/>
  	<result property="count" column="count(hdmac)"/>
  	<result property="min" column="MIN(timestr)"/>
  	<result property="max" column="MAX(timestr)"/>
  </resultMap> 
  
   <resultMap id="mobilenoMap" type="hashmap">
  	<result property="mobileno" column="mobileno"/>
  </resultMap> 
   
	<resultMap id="GroupUsersRankMap" type="hashmap">
		<result property="date" column="date" javaType="java.lang.String"/>	
		<result property="count" column="count" javaType="java.lang.String"/>		
   </resultMap>
   
   	<resultMap id="countGroupUsers" type="hashmap">
		<result property="userCount" column="count(distinct(hdmac))" javaType = "java.lang.Integer"/>		
   </resultMap>
   
   <resultMap id="countHandsets" type="hashmap">
		<result property="userCount" column="count(t.hdmac)" javaType = "java.lang.Integer"/>
		<result property="userMobileno" column="count(distinct t.mobileno)" javaType = "java.lang.Integer"/>
		<result property="userSum" column="sum(t.c)" javaType = "java.lang.Integer"/>	
   </resultMap>
   
  	<sql id="modelTableName">
	    <![CDATA[
	    	t_tag_group_handset_detail
	    ]]>
	</sql>
	<sql id="modelColumns">
	    <![CDATA[
	    	id,
	    	hdmac,
	    	gid,
	    	timestr,
	    	mobileno,
	    	newuser,
	    	auth,
	    	created_at,
	    	updated_at
	    ]]>
	</sql>  
	
	<sql id="modelUserDetail">
	    <![CDATA[
	    	hdmac,
	    	gid,
	    	mobileno,
	    	count(hdmac),
	    	MIN(timestr),
	    	MAX(timestr)
	    ]]>
	</sql> 
	
	<sql id="modelUserCount">
	    <![CDATA[
	    	hdmac,
	    	gid,
	    	mobileno,
	    	count(hdmac) as c,
	    	MIN(timestr),
	    	MAX(timestr)
	    ]]>
	</sql>  
 	
	<sql id="modelInsertValues">
			#{id},
	    	#{hdmac},
	    	#{gid},
	    	#{timestr},
	    	#{mobileno},
	    	#{newuser},
	    	#{auth},
	    	#{created_at},
	    	#{updated_at}
	</sql> 
	
	<sql id="modelUpdateValues">
			id = #{id},
	    	hdmac =	#{hdmac},
	    	gid =	#{gid},
	    	timestr = #{timestr},
	    	mobileno = #{mobileno},
	    	newuser = #{newuser},
	    	auth = #{auth},
	    	created_at =	#{created_at},
	    	updated_at =	#{updated_at}
	</sql>
	
	<sql id="model_CRITERIA_SQL_GenCondition">
		<!--
			WARNING - @mbggenerated This element is automatically generated by
			MyBatis Generator, do not modify. This element was generated on Thu
			Sep 01 10:08:21 CST 2011.
		-->
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
                				</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
                				</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                				</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem" open="(" close=")" separator=",">
										#{listItem}
                  					</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	
	<select id="select" resultMap="modelResult">
	    select <include refid="modelColumns" /> from <include refid="modelTableName" /> 
	    <where>
	    	<if test="_parameter != null">
				id = #{id}
				<!-- 
					#{value}
					#{_parameter}
				 -->
			</if>
		</where>
	</select>
	
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from <include refid="modelTableName" /> where id=#{id}
	</delete>
	
	<delete id="delete" parameterType="tagGroupHandsetDetail">
		delete from <include refid="modelTableName" />
		<where>
			<if test="id != null">
				id = #{id}
			</if>
		</where>
	</delete>
	
	<insert id="insert" parameterType="tagGroupHandsetDetail" useGeneratedKeys="true" keyProperty="id">
		insert into
		<include refid="modelTableName" />
		(
		<include refid="modelColumns" />
		) values (
		<include refid="modelInsertValues" />
		);
	</insert>
 
	<update id="update" parameterType="tagGroupHandsetDetail">
	    update <include refid="modelTableName" /> set <include refid="modelUpdateValues" /> WHERE id = #{id}
	</update>
		
	<select id="selectByIds" resultMap="modelResult" parameterType="java.util.List">
	  	select <include refid="modelColumns" /> from <include refid="modelTableName" />
	  	<where>
	  		id IN
	  		<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
			    #{item}
			</foreach>
	  	</where>
	</select>
	  
	<select id="selectHandsets" resultMap="HandsetMap" parameterType="map">
	    SELECT <include refid="modelUserDetail" /> FROM <include refid="modelTableName" /> 
	    <where>
			gid = #{gid}
			<if test="beginTime !=null and endTime != null">
				AND
					timestr
				BETWEEN
					#{beginTime}
				AND
					#{endTime}
			</if>
	    </where> 
	    GROUP BY hdmac
	    HAVING COUNT(hdmac) ${match} #{count}
	    <if test="mobileno !=null">
			AND mobileno = #{mobileno}
		</if>
		order by count(hdmac) desc
		<if test="pn!=null and ps !=null">
			LIMIT 
	    	#{pn},
	   		#{ps}
		</if>
	</select>
	
	<select id="selectMobilenos" resultMap="mobilenoMap" parameterType="map">
	    SELECT distinct mobileno FROM <include refid="modelTableName" /> 
	    <where>
			gid = #{gid}
			<if test="beginTime !=null and endTime != null">
				AND
					timestr
				BETWEEN
					#{beginTime}
				AND
					#{endTime}
			</if>
			AND mobileno is not null
	    </where> 
	    GROUP BY hdmac
	    HAVING COUNT(hdmac) ${match} #{count}
	</select>
	
	<select id="countHandsets" resultMap="countHandsets" parameterType="map">
	    select count(t.hdmac),sum(t.c),count(distinct t.mobileno) from (SELECT <include refid="modelUserCount" /> FROM <include refid="modelTableName" /> 
	    <where>
			gid = #{gid}
			<if test="beginTime !=null and endTime != null">
				AND
					timestr
				BETWEEN
					#{beginTime}
				AND
					#{endTime}
			</if>
	    </where> 
	    GROUP BY hdmac
	    HAVING COUNT(hdmac) ${match} #{count}
		) t
	</select>
	
	
	<select id="selectGroupUsersRank" resultMap="GroupUsersRankMap" parameterType="map">
	    SELECT timestr as date,count(timestr) as count FROM <include refid="modelTableName" /> 
	    <where>
			gid = #{gid}
			<if test="startTime !=null and endTime != null">
				AND	timestr &gt;= #{startTime}
				AND timestr &lt;= #{endTime}
			</if>
	    </where> 
	    group by timestr
	    order by count desc
	    limit 
	    #{pn},
	    #{ps};
	</select>
	  
	<select id="countGroupUsers" resultMap="countGroupUsers" parameterType="map">
	    select count(distinct(hdmac)) FROM <include refid="modelTableName" />
	    <where>
			gid = #{gid}
			<if test="beginTime !=null and endTime != null">
				AND
					timestr
				BETWEEN
					#{beginTime}
				AND
					#{endTime}
			</if>
	    </where> 
	</select>
	   
	<delete id="deleteByIds" parameterType="java.util.List">
	  	delete from <include refid="modelTableName" />
	  	<where>
	  		id IN
	  		<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
			    #{item}
			</foreach>
	  	</where>
	</delete>
	
	<select id="pkSelectByModelCriteria" resultType="java.lang.Long">
		select id from <include refid="modelTableName" /> 
		<if test="_parameter != null"> 
	     	<include refid="model_CRITERIA_SQL_GenCondition" />
	      	<if test="orderByClause != null">
				order by ${orderByClause}
	    	</if>
			<if test="start!=0 or limit!=0">
				limit #{limit} OFFSET #{start}
			</if>
	    </if>  
	</select>
	
	<select id="countByModelCriteria" resultType="int">
		select count(*) from <include refid="modelTableName" /> 
		<if test="_parameter != null"> 
	      <include refid="model_CRITERIA_SQL_GenCondition" />
	    </if>  		
	</select>
	
	<delete id="removeByModelCriteria">
		delete from <include refid="modelTableName" />  
		<if test="_parameter != null"> 
	      <include refid="model_CRITERIA_SQL_GenCondition" />
    	</if>  
	</delete>
	
	<select id="executeSql" parameterType="String" resultType="int">  
    	${value} 
	</select> 
</mapper>