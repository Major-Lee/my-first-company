<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bhu.vas.api.rpc.tag.model.TagGroupSortMessage">

	<resultMap id="modelResult" type="tagGroupSortMessage">
		<id property="id" column="id" />
		<result property="gid" column="gid" />
		<result property="context" column="context" />
		<result property="start" column="start" />
		<result property="end" column="end" />
		<result property="connect" column="connect" />
		<result property="smtotal" column="smtotal" />
		<result property="state" column="state" />
		<result property="extension_content" column="extension_content" />
		<result property="created_at" column="created_at" />
		<result property="update_at" column="update_at" />
	</resultMap>

	<sql id="modelTableName">
	    <![CDATA[
	    	t_tag_group_sm
	    ]]>
	</sql>
	<sql id="modelColumns">
	    <![CDATA[
	    	id,
	    	gid,
	    	context,
	    	start,
	    	end,
	    	connect,
	    	smtotal,
	    	state,
	        extension_content,
	    	created_at,
	    	update_at
	    ]]>
	</sql>

	<sql id="modelInsertValues">
		#{id},
		#{gid},
		#{context},
		#{start},
		#{end},
		#{connect},
		#{smtotal},
		#{state},
		#{extension_content},
		#{created_at},
		#{update_at}
	</sql>

	<sql id="modelUpdateValues">
		id = #{id},
		gid = #{gid},
		context = #{context},
		start = #{start},
		end = #{end},
		connect = #{connect},
		smtotal = #{smtotal},
		state = #{state},
		extension_content = #{extension_content},
		created_at = #{created_at},
		update_at = #{update_at}
	</sql>
	<sql id="model_CRITERIA_SQL_GenCondition">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Thu Sep 01 
			10:08:21 CST 2011. -->
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and #{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>

	<select id="select" resultMap="modelResult">
		select
		<include refid="modelColumns" />
		from
		<include refid="modelTableName" />
		<where>
			<if test="_parameter != null">
				id = #{id}
				<!-- #{value} #{_parameter} -->
			</if>
		</where>
	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		<include refid="modelTableName" />
		where id=#{id}
	</delete>

	<delete id="delete" parameterType="tagGroupSortMessage">
		delete from
		<include refid="modelTableName" />
		<where>
			<if test="id != null">
				id = #{id}
			</if>
		</where>
	</delete>

	<insert id="insert" parameterType="tagGroupSortMessage" useGeneratedKeys="true" keyProperty="id">
		insert into
		<include refid="modelTableName" />
		(
		<include refid="modelColumns" />
		) values (
		<include refid="modelInsertValues" />
		);
	</insert>

	<update id="update" parameterType="tagGroupSortMessage">
		update
		<include refid="modelTableName" />
		set
		<include refid="modelUpdateValues" />
		WHERE id = #{id}
	</update>

	<select id="selectByIds" resultMap="modelResult" parameterType="java.util.List">
		select
		<include refid="modelColumns" />
		from
		<include refid="modelTableName" />
		<where>
			id IN
			<foreach item="item" index="index" collection="list" open="("
				separator="," close=")">
				#{item}
			</foreach>
		</where>
	</select>

	<delete id="deleteByIds" parameterType="java.util.List">
		delete from
		<include refid="modelTableName" />
		<where>
			id IN
			<foreach item="item" index="index" collection="list" open="("
				separator="," close=")">
				#{item}
			</foreach>
		</where>
	</delete>

	<select id="pkSelectByModelCriteria" resultType="java.lang.String">
		select id from
		<include refid="modelTableName" />
		<if test="_parameter != null">
			<include refid="model_CRITERIA_SQL_GenCondition" />
			<if test="orderByClause != null">
				order by ${orderByClause}
			</if>
			<if test="start!=0 or limit!=0">
				limit #{limit} OFFSET #{start}
			</if>
		</if>
	</select>

	<select id="countByModelCriteria" resultType="int">
		select count(*) from
		<include refid="modelTableName" />
		<if test="_parameter != null">
			<include refid="model_CRITERIA_SQL_GenCondition" />
		</if>
	</select>

	<delete id="removeByModelCriteria">
		delete from
		<include refid="modelTableName" />
		<if test="_parameter != null">
			<include refid="model_CRITERIA_SQL_GenCondition" />
		</if>
	</delete>

	<select id="executeSql" parameterType="String" resultType="int">
		${value}
	</select>
</mapper>