<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bhu.vas.api.rpc.payment.model.PaymentWithdraw">

	<resultMap id="modelResult" type="paymentWithdraw">
		<id property="id" column="id" />
		<result property="tid" column="tid" />
		<result property="wid" column="wid" />
		<result property="withdraw_type" column="withdraw_type" />
		<result property="price" column="price" />
		<result property="transcost" column="transcost" />
		<result property="taxcost" column="taxcost" />
		<result property="user_id" column="user_id" />
		<result property="user_name" column="user_name" />
		<result property="subject" column="subject" />
		<result property="appid" column="appid" />
		<result property="billno" column="billno" />
		<result property="withdraw_status" column="withdraw_status" />
		<result property="notify_status" column="notify_status" />
		<result property="fail_cause" column="fail_cause" />
		<result property="exter_invoke_ip" column="exter_invoke_ip" />
		<result property="created_at" column="created_at" />
		<result property="updated_at" column="updated_at" />
	</resultMap>

	<sql id="modelTableName">
	    <![CDATA[
	    	t_payment_withdraws
	    ]]>
	</sql>
	<sql id="modelColumns">
	    <![CDATA[
	    	id,
			tid,
			wid,
			withdraw_type,
			price,
			transcost,
			taxcost,
			user_id,
			user_name,
			subject,
			appid,
			billno,
			withdraw_status,
			notify_status,
			fail_cause,
			exter_invoke_ip,
			created_at,
			updated_at
	    ]]>
	</sql>
	<sql id="modelWithoutPKColumns">
	    <![CDATA[
			tid,
			wid,
			withdraw_type,
			price,
			transcost,
			taxcost,
			user_id,
			user_name,
			subject,
			appid,
			billno,
			withdraw_status,
			notify_status,
			fail_cause,
			exter_invoke_ip,
			created_at,
			updated_at
	    ]]>
	</sql>

	<sql id="modelInsertValues">
		#{id},
		#{tid},
		#{wid},
		#{withdraw_type},
		#{price},
		#{transcost},
		#{taxcost},
		#{user_id},
		#{user_name},
		#{subject},
		#{appid},
		#{billno},
		#{withdraw_status},
		#{notify_status},
		#{fail_cause},
		#{exter_invoke_ip},
		#{created_at},
		#{updated_at}
	</sql>

	<sql id="modelUpdateValues">
		id = #{id},
		billno = #{billno},
		withdraw_status = #{withdraw_status},
		notify_status = #{notify_status},
		fail_cause = #{fail_cause},
		updated_at = #{updated_at}
	</sql>
	<sql id="model_CRITERIA_SQL_GenCondition">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Thu Sep 01 
			10:08:21 CST 2011. -->
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and #{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>

	<select id="select" resultMap="modelResult">
		select
		<include refid="modelColumns" />
		from
		<include refid="modelTableName" />
		<where>
			<if test="_parameter != null">
				id = #{id}
				<!-- #{value} #{_parameter} -->
			</if>
		</where>
	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from
		<include refid="modelTableName" />
		where id=#{id}
	</delete>

	<delete id="delete" parameterType="paymentWithdraw">
		delete from
		<include refid="modelTableName" />
		<where>
			<if test="id != null">
				id = #{id}
			</if>
		</where>
	</delete>
	<insert id="insert" parameterType="paymentWithdraw">
		insert into
		<include refid="modelTableName" />
		(
		<include refid="modelColumns" />
		) values (
		<include refid="modelInsertValues" />
		);
		<!-- <selectKey keyProperty="id" resultType="java.lang.Integer" order="AFTER"> 
			select last_insert_id(); </selectKey> -->
	</insert>

	<update id="update" parameterType="paymentWithdraw">
		update
		<include refid="modelTableName" />
		set
		<include refid="modelUpdateValues" />
		WHERE id = #{id}
	</update>

	<select id="selectByIds" resultMap="modelResult" parameterType="java.util.List">
		select
		<include refid="modelColumns" />
		from
		<include refid="modelTableName" />
		<where>
			id IN
			<foreach item="item" index="index" collection="list" open="("
				separator="," close=")">
				#{item}
			</foreach>
		</where>
	</select>

	<delete id="deleteByIds" parameterType="java.util.List">
		delete from
		<include refid="modelTableName" />
		<where>
			id IN
			<foreach item="item" index="index" collection="list" open="("
				separator="," close=")">
				#{item}
			</foreach>
		</where>
	</delete>

	<select id="pkSelectByModelCriteria" resultType="long">
		select id from
		<include refid="modelTableName" />
		<if test="_parameter != null">
			<include refid="model_CRITERIA_SQL_GenCondition" />
			<if test="orderByClause != null">
				order by ${orderByClause}
			</if>
			<if test="start!=0 or limit!=0">
				limit #{limit} OFFSET #{start}
			</if>
		</if>
	</select>

	<select id="countByModelCriteria" resultType="int">
		select count(*) from
		<include refid="modelTableName" />
		<if test="_parameter != null">
			<include refid="model_CRITERIA_SQL_GenCondition" />
		</if>
	</select>

	<delete id="removeByModelCriteria">
		delete from
		<include refid="modelTableName" />
		<if test="_parameter != null">
			<include refid="model_CRITERIA_SQL_GenCondition" />
		</if>
	</delete>
</mapper>