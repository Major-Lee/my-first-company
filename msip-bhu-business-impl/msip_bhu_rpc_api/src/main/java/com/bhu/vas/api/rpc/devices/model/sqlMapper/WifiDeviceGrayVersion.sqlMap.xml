<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bhu.vas.api.rpc.devices.model.WifiDeviceGrayVersion">

    <resultMap id="modelResult" type="wifiDeviceGrayVersion">
        <id property="dut" column="dut"/>
        <id property="gl" column="gl"/>
        <result property="devices" 	column="devices"/>
        <result property="d_fwid" 	column="d_fwid"/>
        <result property="d_omid" 	column="d_omid"/>
        
        <result property="created_at" column="created_at"/>
        <result property="updated_at" column="updated_at"/>
    </resultMap>

    <sql id="modelTableName">
		<![CDATA[
	    	t_wifi_devices_grayversions
        ]]>
	</sql>
    <sql id="modelColumns">
		<![CDATA[
			dut,
	    	gl,
	    	devices,
	    	d_fwid,
	    	d_omid,
	    	created_at,
	    	updated_at

        ]]>
	</sql>
    <sql id="modelWithoutPKColumns">
		<![CDATA[
	    	devices,
	    	d_fwid,
	    	d_omid,
	    	created_at,
	    	updated_at

        ]]>
	</sql>

    <sql id="modelInsertValues">
		#{dut},
		#{gl},
		#{devices},
		#{d_fwid},
		#{d_omid},
		#{created_at},
		#{updated_at}
	</sql>
    <sql id="modelUpdateValues">
    	devices = #{devices},
		d_fwid = #{d_fwid},
		d_omid = #{d_omid},
		created_at = #{created_at},
		updated_at = #{updated_at}
	</sql>
    <sql id="modelIncreaseUpdateValues">
        <foreach collection="fields_delta.keys" item="k" separator=",">
            ${k} = ${k}+${fields_delta[k]}
        </foreach>
        ,updated_at = #{updated_at}
    </sql>
    <sql id="model_CRITERIA_SQL_GenCondition">
        <!--
            WARNING - @mbggenerated This element is automatically generated by
            MyBatis Generator, do not modify. This element was generated on Thu
            Sep 01 10:08:21 CST 2011.
        -->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <select id="select" resultMap="modelResult">
        select
        <include refid="modelColumns"/>
        from
        <include refid="modelTableName"/>
        <where>
            <if test="_parameter != null">
                dut = #{dut} and gl = #{gl}
            </if>
        </where>
    </select>

    <delete id="deleteByPrimaryKey" parameterType="wifiDeviceGrayVersionPK">
        delete from
        <include refid="modelTableName"/>
        where dut = #{dut} and gl = #{gl}
    </delete>

    <delete id="delete" parameterType="wifiDeviceGrayVersion">
        delete from
        <include refid="modelTableName"/>
        <where>
            <if test="id != null">
                dut = #{dut} and gl = #{gl}
            </if>
        </where>
    </delete>

    <insert id="insert" parameterType="wifiDeviceGrayVersion">
        insert into
        <include refid="modelTableName"/>
        (<include refid="modelColumns"/>) values (<include refid="modelInsertValues"/>);
    </insert>

    <update id="update" parameterType="wifiDeviceGrayVersion">
        update
        <include refid="modelTableName"/>
        set
        <include refid="modelUpdateValues"/>
        WHERE dut = #{dut} and gl = #{gl}
    </update>

    <update id="increaseUpdate" parameterType="wifiDeviceGroupRelation">
        update
        <include refid="modelTableName"/>
        set
        <include refid="modelIncreaseUpdateValues"/>
        WHERE dut = #{dut} and gl = #{gl}
    </update>

    <select id="selectByIds" resultMap="modelResult" parameterType="java.util.List">
        select
        <include refid="modelColumns"/>
        from
        <include refid="modelTableName"/>
        <where>
            <foreach item="item" index="index" collection="list" open="(" separator=" or " close=")">
                ( dut = #{item.dut} and gl= #{item.gl} )
            </foreach>
        </where>
    </select>

    <delete id="deleteByIds" parameterType="java.util.List">
        delete from
        <include refid="modelTableName"/>
        <where>
            <foreach item="item" index="index" collection="list" open="(" separator=" or " close=")">
                ( dut = #{item.dut} and gl= #{item.gl} )
            </foreach>
        </where>
    </delete>

    <select id="pkSelectByModelCriteria" resultType="wifiDeviceGroupRelationPK">
        select dut, gl from
        <include refid="modelTableName"/>
        <if test="_parameter != null">
            <include refid="model_CRITERIA_SQL_GenCondition"/>
            <if test="orderByClause != null">
                order by ${orderByClause}
            </if>
            <if test="start!=0 or limit!=0">
                limit #{limit} OFFSET #{start}
            </if>
        </if>
    </select>

    <select id="countByModelCriteria" resultType="int">
        select count(*) from
        <include refid="modelTableName"/>
        <if test="_parameter != null">
            <include refid="model_CRITERIA_SQL_GenCondition"/>
        </if>
    </select>

    <delete id="removeByModelCriteria">
        delete from
        <include refid="modelTableName"/>
        <if test="_parameter != null">
            <include refid="model_CRITERIA_SQL_GenCondition"/>
        </if>
    </delete>
</mapper>