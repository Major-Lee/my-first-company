<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wecite.toplines.api.sequence.model.Sequence">

  <resultMap id="modelResult" type="sequence">
    <id property="id" column="id"/>
    <result property="nextid" column="nextid"/>
    <result property="updated_at" column="updated_at"/>
  </resultMap>  
  
  	<sql id="modelTableName">
	    <![CDATA[
	    	t_common_sequence
	    ]]>
	</sql>
	<sql id="modelColumns">
	    <![CDATA[
	    	id,
	    	nextid,
	    	updated_at
	    ]]>
	</sql>  
	<sql id="modelWithoutPKColumns">
	    <![CDATA[
	    	nextid,
	    	updated_at
	    ]]>
	</sql>   
	
	<sql id="modelInsertValues">
	    	#{id},
	    	#{nextid},
	    	#{updated_at}
	</sql> 
	
	<sql id="modelUpdateValues">
	    	nextid = nextid+#{incr},
	    	updated_at = #{updated_at}
	</sql>

    <sql id="model_CRITERIA_SQL_GenCondition">
		<!--
			WARNING - @mbggenerated This element is automatically generated by
			MyBatis Generator, do not modify. This element was generated on Thu
			Sep 01 10:08:21 CST 2011.
		-->
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
                				</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
                				</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                				</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem" open="(" close=")" separator=",">
										#{listItem}
                  					</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>

    <update id="begin">
    	begin;
    </update>
    <update id="commit">
    	commit;
    </update>
    
	<select id="select" resultMap="modelResult">
	    select <include refid="modelColumns" /> from <include refid="modelTableName" /> 
	    <where>
	    	<if test="_parameter != null">
				id = #{id}
			</if>
		</where>
	</select>
	
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from <include refid="modelTableName" /> where id=#{id}
	</delete>
	
	<delete id="delete" parameterType="sequence">
		delete from <include refid="modelTableName" />
		<where>
			<if test="id != null">
				id = #{id}
			</if>
		</where>
	</delete>
	
	<insert id="insert" parameterType="sequence">
		insert into <include refid="modelTableName" /> (<include refid="modelColumns" />) values (<include refid="modelInsertValues" />);
	</insert>
 
	<update id="update" parameterType="sequence">
	    update <include refid="modelTableName" /> set <include refid="modelUpdateValues" /> WHERE id = #{id}
	</update>
		
	<select id="selectByIds" resultMap="modelResult" parameterType="java.util.List">
	  	select <include refid="modelColumns" /> from <include refid="modelTableName" />
	  	<where>
	  		id IN
	  		<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
			    #{item}
			</foreach>
	  	</where>
	</select>
	  
	<delete id="deleteByIds" parameterType="java.util.List">
	  	delete from <include refid="modelTableName" />
	  	<where>
	  		id IN
	  		<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
			    #{item}
			</foreach>
	  	</where>
	</delete>
	
	<select id="pkSelectByModelCriteria" resultType="string">
		select id from <include refid="modelTableName" /> 
		<if test="_parameter != null"> 
	      	<include refid="model_CRITERIA_SQL_GenCondition" />
	      	<if test="orderByClause != null">
				order by ${orderByClause}
	    	</if>
			<if test="start!=0 or limit!=0">
				limit #{limit} OFFSET #{start}
			</if>
	    </if>  
	</select>
	
	<select id="countByModelCriteria" resultType="int">
		select count(*) from <include refid="modelTableName" /> 
		<if test="_parameter != null"> 
	      <include refid="model_CRITERIA_SQL_GenCondition" />
	    </if>  		
	</select>
	
	<delete id="removeByModelCriteria">
		delete from <include refid="modelTableName" />  
		<if test="_parameter != null"> 
	      <include refid="model_CRITERIA_SQL_GenCondition" />
    	</if>  
	</delete>
	
</mapper>