<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd"
    default-lazy-init="true">
    <!--  ActiveMQ destinations  -->
    <!--  使用Queue方式-->
	<bean id="destinationSocialMessageQueue" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg index="0" value="${activemq.queue.social.name}" />
        <!-- 同时监听多个queue,同时对queue1进行预取处理
        <constructor-arg index="0" value="queue1?consumer.prefetchSize=100,queue2" />
         -->
    </bean> 
	<!--  Spring JmsTemplate config -->
	<bean id="jmsSocialMessageTemplate" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory" ref="jmsFactory" />  
		<!-- custom MessageConverter
		<property name="messageConverter" ref="defaultFeedMessageConverter" />
		 -->
	</bean>
	<!--  Message Driven POJO (MDP) -->
    <!-- consumer for queue-->
    <bean id="socialMessageQueueConsumer" class="com.bhu.vas.business.asyn.spring.activemq.queue.consumer.SocialMessageQueueConsumer" />
    <!-- Message Listener for  -->
    <bean id="socialMessageQueueListener" class="org.springframework.jms.listener.adapter.MessageListenerAdapter">
		<constructor-arg ref="socialMessageQueueConsumer" />
		<!--  may be other method -->
		<property name="defaultListenerMethod" value="receive" />
		<!-- custom MessageConverter define
		<property name="messageConverter" ref="defaultFeedMessageConverter" />
		 -->
	</bean>
    <!--  listener container，MDP无需实现接口 -->
    <bean id="socialMessageQueueListenerContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="jmsFactory" />
		<property name="destination" ref="destinationSocialMessageQueue" />
		<!-- 
		<property name="messageSelector" value="${jms.messageSelector}" />
		 -->
		<property name="messageListener" ref="socialMessageQueueListener" />
		<!-- 多线程消费数量
		<property name="concurrentConsumers" value="2" />  -->
	</bean>
	<!-- 
	<bean id="userRegisteredActHandler" 	class="com.wecite.toplines.business.asyn.web.handler.UserRegisteredActHandler" factory-method="getInstance" lazy-init="false"/>
	<bean id="userSubjectClickActHandler" 	class="com.wecite.toplines.business.asyn.web.handler.UserSubjectClickActHandler" factory-method="getInstance" lazy-init="false"/>
	<bean id="userSubjectAbstractClickActHandler" 	class="com.wecite.toplines.business.asyn.web.handler.UserSubjectAbstractClickActHandler" factory-method="getInstance" lazy-init="false"/>
	<bean id="userSubjectEstimateActHandler" 	class="com.wecite.toplines.business.asyn.web.handler.UserSubjectEstimateActHandler" factory-method="getInstance" lazy-init="false"/>
	<bean id="userSubjectTaggingActHandler" 	class="com.wecite.toplines.business.asyn.web.handler.UserSubjectTaggingActHandler" factory-method="getInstance" lazy-init="false"/>
	<bean id="userSubjectShareActHandler" 	class="com.wecite.toplines.business.asyn.web.handler.UserSubjectShareActHandler" factory-method="getInstance" lazy-init="false"/>
	<bean id="userBlackDomainActHandler" 	class="com.wecite.toplines.business.asyn.web.handler.UserBlackDomainActHandler" factory-method="getInstance" lazy-init="false"/>
	<bean id="subjectWeixinShareActHandler" 	class="com.wecite.toplines.business.asyn.web.handler.SubjectWeixinShareActHandler" factory-method="getInstance" lazy-init="false"/>
	 -->
</beans>