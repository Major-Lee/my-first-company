<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
	default-lazy-init="true">
	<description>Quartz的本地Cron式执行任务配置</description>
	<!-- Quartz本地Schduler -->
	<bean id="localQuartzScheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean" lazy-init="false">
		<!-- Triggers集成 -->
		<property name="triggers">
			<list>
				<!-- 每隔5分钟执行一次 -->
				<ref bean="systemStatisticsLoaderCronTrigger" />
				<!-- 每天凌晨0点1分执行一次 -->
				<ref bean="statisticsLoaderCronTrigger" />
				<!-- 每30分钟执行一次  -->
				<ref bean="wifiDeviceOnlineCronTrigger" />
				<!-- 每30分钟执行一次  -->
				<ref bean="handsetStatisticsLoaderCronTrigger" />
				<!-- 每一个小时执行一次  -->
				<ref bean="statisticsOnlineLoaderCronTrigger" />
				<!-- 每一个小时执行一次  
				<ref bean="wifiDeviceLocationQueryLoaderCronTrigger" />
				-->
				<!-- 每隔60分钟执行一次 
				<ref bean="wifiDeviceOnlineCmdDownLoaderCronTrigger" />		
				-->
				<!-- 每隔3分钟执行一次 
				<ref bean="wifiDeviceLocationStep2QueryLoaderCronTrigger" />		
				-->
			</list>
		</property>
		<!-- Quartz配置 -->
		<property name="quartzProperties">
			<props><prop key="org.quartz.threadPool.threadCount">5</prop></props>
		</property>
		<!-- 启动时延期3秒开始任务 -->
		<property name="startupDelay" value="3" />
	</bean>

	<!-- Cron式Trigger定义 -->
	<bean id="systemStatisticsLoaderCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="systemStatisticsLoaderJobDetail" />
		<!-- 每隔5分钟执行一次   0 0/1 * * * ?  -->
		<property name="cronExpression" value="0 0/5 * * * ?" />
	</bean>

	<!-- Cron JobDetajil, 基于MethodInvokingJobDetailFactoryBean调用普通Spring Bean -->
	<bean id="systemStatisticsLoaderJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="systemStatisticsLoaderJob" />
		<property name="targetMethod" value="execute" />
		<!-- 同一任务在前一次执行未完成而Trigger时间又到时是否并发开始新的执行, 默认为true. -->
		<property name="concurrent" value="false" />
	</bean>

	<!-- 被Cron执行的普通Spring Bean -->
	<bean id="systemStatisticsLoaderJob" class="com.bhu.vas.plugins.quartz.SystemStatisticsLoader" />
	
	<!-- Cron式Trigger定义 -->
	<bean id="statisticsLoaderCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="statisticsLoaderJobDetail" />
		<!-- 每天凌晨0点1分执行一次   0 1 0 * * ?  -->
		<property name="cronExpression" value="0 1 0 * * ?" />
	</bean>

	<!-- Cron JobDetajil, 基于MethodInvokingJobDetailFactoryBean调用普通Spring Bean -->
	<bean id="statisticsLoaderJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="statisticsLoaderJob" />
		<property name="targetMethod" value="execute" />
		<!-- 同一任务在前一次执行未完成而Trigger时间又到时是否并发开始新的执行, 默认为true. -->
		<property name="concurrent" value="false" />
	</bean>

	<!-- 被Cron执行的普通Spring Bean -->
	<bean id="statisticsLoaderJob" class="com.bhu.vas.plugins.quartz.StatisticsLoader" />
	
	
	<!-- Cron式Trigger定义 -->
	<bean id="wifiDeviceOnlineCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="wifiDeviceOnlineJobDetail" />
		<!-- 每30分钟执行一次   0 0/30 * * * ?  -->
		<property name="cronExpression" value="0 0/30 * * * ?" />
	</bean>

	<!-- Cron JobDetajil, 基于MethodInvokingJobDetailFactoryBean调用普通Spring Bean -->
	<bean id="wifiDeviceOnlineJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="wifiDeviceOnlineJob" />
		<property name="targetMethod" value="execute" />
		<!-- 同一任务在前一次执行未完成而Trigger时间又到时是否并发开始新的执行, 默认为true. -->
		<property name="concurrent" value="false" />
	</bean>

	<!-- 被Cron执行的普通Spring Bean -->
	<bean id="wifiDeviceOnlineJob" class="com.bhu.vas.plugins.quartz.WifiDeviceOnlineLoader" />
	
	
	<!-- Cron式Trigger定义 -->
	<bean id="statisticsOnlineLoaderCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="statisticsOnlineLoaderCronJobDetail" />
		<!-- 每一时执行一次 -->
		<property name="cronExpression" value="0 0/60 * * * ?" />
	</bean>

	<!-- Cron JobDetajil, 基于MethodInvokingJobDetailFactoryBean调用普通Spring Bean -->
	<bean id="statisticsOnlineLoaderCronJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="statisticsOnlineLoaderJob" />
		<property name="targetMethod" value="execute" />
		<!-- 同一任务在前一次执行未完成而Trigger时间又到时是否并发开始新的执行, 默认为true. -->
		<property name="concurrent" value="false" />
	</bean>

	<!-- 被Cron执行的普通Spring Bean -->
	<bean id="statisticsOnlineLoaderJob" class="com.bhu.vas.plugins.quartz.StatisticsOnlineLoader" />
	
	
	
	<!-- Cron式Trigger定义 -->
	<bean id="wifiDeviceLocationQueryLoaderCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="wifiDeviceLocationQueryLoaderCronJobDetail" />
		<!-- 每一时执行一次 -->
		<property name="cronExpression" value="0 0/60 * * * ?" />
	</bean>
	<!-- Cron JobDetajil, 基于MethodInvokingJobDetailFactoryBean调用普通Spring Bean -->
	<bean id="wifiDeviceLocationQueryLoaderCronJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="wifiDeviceLocationQueryLoaderJob" />
		<property name="targetMethod" value="execute" />
		<!-- 同一任务在前一次执行未完成而Trigger时间又到时是否并发开始新的执行, 默认为true. -->
		<property name="concurrent" value="false" />
	</bean>

	<!-- 被Cron执行的普通Spring Bean -->
	<bean id="wifiDeviceLocationQueryLoaderJob" class="com.bhu.vas.plugins.quartz.WifiDeviceLocationQueryLoader" />
	
	
	
	<!-- Cron式Trigger定义 -->
	<bean id="wifiDeviceOnlineCmdDownLoaderCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="wifiDeviceOnlineCmdDownLoaderCronJobDetail" />
		<!-- 每隔5分钟执行一次   0 0/1 * * * ?  -->
		<property name="cronExpression" value="0 0/60 * * * ?" />
	</bean>
	<!-- Cron JobDetajil, 基于MethodInvokingJobDetailFactoryBean调用普通Spring Bean -->
	<bean id="wifiDeviceOnlineCmdDownLoaderCronJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="wifiDeviceOnlineCmdDownLoaderJob" />
		<property name="targetMethod" value="execute" />
		<!-- 同一任务在前一次执行未完成而Trigger时间又到时是否并发开始新的执行, 默认为true. -->
		<property name="concurrent" value="false" />
	</bean>

	<!-- 被Cron执行的普通Spring Bean -->
	<bean id="wifiDeviceOnlineCmdDownLoaderJob" class="com.bhu.vas.plugins.quartz.WifiDeviceOnlineCmdDownLoader" />
	
	
	<!-- Cron式Trigger定义 -->
	<bean id="wifiDeviceLocationStep2QueryLoaderCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="wifiDeviceLocationStep2QueryLoaderCronJobDetail" />
		<!-- 每隔5分钟执行一次   0 0/1 * * * ?  -->
		<property name="cronExpression" value="0 0/3 * * * ?" />
	</bean>
	<!-- Cron JobDetajil, 基于MethodInvokingJobDetailFactoryBean调用普通Spring Bean -->
	<bean id="wifiDeviceLocationStep2QueryLoaderCronJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="wifiDeviceLocationStep2QueryLoaderJob" />
		<property name="targetMethod" value="execute" />
		<!-- 同一任务在前一次执行未完成而Trigger时间又到时是否并发开始新的执行, 默认为true. -->
		<property name="concurrent" value="false" />
	</bean>

	<!-- 被Cron执行的普通Spring Bean -->
	<bean id="wifiDeviceLocationStep2QueryLoaderJob" class="com.bhu.vas.plugins.quartz.WifiDeviceLocationStep2QueryLoader" />
	
	
	
	<!-- Cron式Trigger定义 -->
	<bean id="handsetStatisticsLoaderCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="handsetStatisticsLoaderJobDetail" />
		<!-- 每隔30分钟执行一次   0 0/30 * * * ?  -->
		<property name="cronExpression" value="0 0/30 * * * ?" />
	</bean>
	<!-- Cron JobDetajil, 基于MethodInvokingJobDetailFactoryBean调用普通Spring Bean -->
	<bean id="handsetStatisticsLoaderJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="handsetStatisticsLoaderJob" />
		<property name="targetMethod" value="execute" />
		<!-- 同一任务在前一次执行未完成而Trigger时间又到时是否并发开始新的执行, 默认为true. -->
		<property name="concurrent" value="false" />
	</bean>

	<!-- 被Cron执行的普通Spring Bean -->
	<bean id="handsetStatisticsLoaderJob" class="com.bhu.vas.plugins.quartz.HandsetStatisticsLoader" />
	
	
	
	
</beans>
