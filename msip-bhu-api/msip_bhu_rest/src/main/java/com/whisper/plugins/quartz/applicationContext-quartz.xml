<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
	default-lazy-init="true">
	<description>Quartz的本地Cron式执行任务配置</description>
	<!-- Quartz本地Schduler -->
	<bean id="localQuartzScheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean" lazy-init="false">
		<!-- Triggers集成 -->
		<property name="triggers">
			<list>
				<ref bean="relodConfCheckerCronTrigger" />
			</list>
		</property>
		<!-- Quartz配置 -->
		<property name="quartzProperties">
			<props><prop key="org.quartz.threadPool.threadCount">5</prop></props>
		</property>
		<!-- 启动时延期30秒开始任务 -->
		<property name="startupDelay" value="30" />
	</bean>

		<!-- Cron式Trigger定义 -->
	<bean id="relodConfCheckerCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="reloadConfCheckerCronJobDetail" />
		<!-- 朝1晚23工作时间内每15分钟 -->
		<property name="cronExpression" value="0 0/15 1-23 * * ?" />
	</bean>

	<!-- Cron JobDetajil, 基于MethodInvokingJobDetailFactoryBean调用普通Spring Bean -->
	<bean id="reloadConfCheckerCronJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="reloadConfCheckerJob" />
		<property name="targetMethod" value="execute" />
		<!-- 同一任务在前一次执行未完成而Trigger时间又到时是否并发开始新的执行, 默认为true. -->
		<property name="concurrent" value="false" />
	</bean>

	<!-- 被Cron执行的普通Spring Bean -->
	<bean id="reloadConfCheckerJob" class="com.et.business.reloadconf.quartztask.ReloadConfChecker" />
</beans>
